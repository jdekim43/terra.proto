//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ibc/applications/transfer/v1/tx.proto

package ibc.applications.transfer.v1;

@kotlin.jvm.JvmSynthetic
public inline fun msgTransfer(block: ibc.applications.transfer.v1.MsgTransferKt.Dsl.() -> kotlin.Unit): ibc.applications.transfer.v1.Tx.MsgTransfer =
  ibc.applications.transfer.v1.MsgTransferKt.Dsl._create(ibc.applications.transfer.v1.Tx.MsgTransfer.newBuilder()).apply { block() }._build()
public object MsgTransferKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ibc.applications.transfer.v1.Tx.MsgTransfer.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ibc.applications.transfer.v1.Tx.MsgTransfer.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ibc.applications.transfer.v1.Tx.MsgTransfer = _builder.build()

    /**
     * <pre>
     * the port on which the packet will be sent
     * </pre>
     *
     * <code>string source_port = 1 [(.gogoproto.moretags) = "yaml:&#92;"source_port&#92;""];</code>
     */
    public var sourcePort: kotlin.String
      @JvmName("getSourcePort")
      get() = _builder.getSourcePort()
      @JvmName("setSourcePort")
      set(value) {
        _builder.setSourcePort(value)
      }
    /**
     * <pre>
     * the port on which the packet will be sent
     * </pre>
     *
     * <code>string source_port = 1 [(.gogoproto.moretags) = "yaml:&#92;"source_port&#92;""];</code>
     */
    public fun clearSourcePort() {
      _builder.clearSourcePort()
    }

    /**
     * <pre>
     * the channel by which the packet will be sent
     * </pre>
     *
     * <code>string source_channel = 2 [(.gogoproto.moretags) = "yaml:&#92;"source_channel&#92;""];</code>
     */
    public var sourceChannel: kotlin.String
      @JvmName("getSourceChannel")
      get() = _builder.getSourceChannel()
      @JvmName("setSourceChannel")
      set(value) {
        _builder.setSourceChannel(value)
      }
    /**
     * <pre>
     * the channel by which the packet will be sent
     * </pre>
     *
     * <code>string source_channel = 2 [(.gogoproto.moretags) = "yaml:&#92;"source_channel&#92;""];</code>
     */
    public fun clearSourceChannel() {
      _builder.clearSourceChannel()
    }

    /**
     * <pre>
     * the tokens to be transferred
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin token = 3 [(.gogoproto.nullable) = false];</code>
     */
    public var token: cosmos.base.v1beta1.CoinOuterClass.Coin
      @JvmName("getToken")
      get() = _builder.getToken()
      @JvmName("setToken")
      set(value) {
        _builder.setToken(value)
      }
    /**
     * <pre>
     * the tokens to be transferred
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin token = 3 [(.gogoproto.nullable) = false];</code>
     */
    public fun clearToken() {
      _builder.clearToken()
    }
    /**
     * <pre>
     * the tokens to be transferred
     * </pre>
     *
     * <code>.cosmos.base.v1beta1.Coin token = 3 [(.gogoproto.nullable) = false];</code>
     * @return Whether the token field is set.
     */
    public fun hasToken(): kotlin.Boolean {
      return _builder.hasToken()
    }

    /**
     * <pre>
     * the sender address
     * </pre>
     *
     * <code>string sender = 4;</code>
     */
    public var sender: kotlin.String
      @JvmName("getSender")
      get() = _builder.getSender()
      @JvmName("setSender")
      set(value) {
        _builder.setSender(value)
      }
    /**
     * <pre>
     * the sender address
     * </pre>
     *
     * <code>string sender = 4;</code>
     */
    public fun clearSender() {
      _builder.clearSender()
    }

    /**
     * <pre>
     * the recipient address on the destination chain
     * </pre>
     *
     * <code>string receiver = 5;</code>
     */
    public var receiver: kotlin.String
      @JvmName("getReceiver")
      get() = _builder.getReceiver()
      @JvmName("setReceiver")
      set(value) {
        _builder.setReceiver(value)
      }
    /**
     * <pre>
     * the recipient address on the destination chain
     * </pre>
     *
     * <code>string receiver = 5;</code>
     */
    public fun clearReceiver() {
      _builder.clearReceiver()
    }

    /**
     * <pre>
     * Timeout height relative to the current block height.
     * The timeout is disabled when set to 0.
     * </pre>
     *
     * <code>.ibc.core.client.v1.Height timeout_height = 6 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"timeout_height&#92;""];</code>
     */
    public var timeoutHeight: ibc.core.client.v1.Client.Height
      @JvmName("getTimeoutHeight")
      get() = _builder.getTimeoutHeight()
      @JvmName("setTimeoutHeight")
      set(value) {
        _builder.setTimeoutHeight(value)
      }
    /**
     * <pre>
     * Timeout height relative to the current block height.
     * The timeout is disabled when set to 0.
     * </pre>
     *
     * <code>.ibc.core.client.v1.Height timeout_height = 6 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"timeout_height&#92;""];</code>
     */
    public fun clearTimeoutHeight() {
      _builder.clearTimeoutHeight()
    }
    /**
     * <pre>
     * Timeout height relative to the current block height.
     * The timeout is disabled when set to 0.
     * </pre>
     *
     * <code>.ibc.core.client.v1.Height timeout_height = 6 [(.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:&#92;"timeout_height&#92;""];</code>
     * @return Whether the timeoutHeight field is set.
     */
    public fun hasTimeoutHeight(): kotlin.Boolean {
      return _builder.hasTimeoutHeight()
    }

    /**
     * <pre>
     * Timeout timestamp in absolute nanoseconds since unix epoch.
     * The timeout is disabled when set to 0.
     * </pre>
     *
     * <code>uint64 timeout_timestamp = 7 [(.gogoproto.moretags) = "yaml:&#92;"timeout_timestamp&#92;""];</code>
     */
    public var timeoutTimestamp: kotlin.Long
      @JvmName("getTimeoutTimestamp")
      get() = _builder.getTimeoutTimestamp()
      @JvmName("setTimeoutTimestamp")
      set(value) {
        _builder.setTimeoutTimestamp(value)
      }
    /**
     * <pre>
     * Timeout timestamp in absolute nanoseconds since unix epoch.
     * The timeout is disabled when set to 0.
     * </pre>
     *
     * <code>uint64 timeout_timestamp = 7 [(.gogoproto.moretags) = "yaml:&#92;"timeout_timestamp&#92;""];</code>
     */
    public fun clearTimeoutTimestamp() {
      _builder.clearTimeoutTimestamp()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ibc.applications.transfer.v1.Tx.MsgTransfer.copy(block: ibc.applications.transfer.v1.MsgTransferKt.Dsl.() -> kotlin.Unit): ibc.applications.transfer.v1.Tx.MsgTransfer =
  ibc.applications.transfer.v1.MsgTransferKt.Dsl._create(this.toBuilder()).apply { block() }._build()
