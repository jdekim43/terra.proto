//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ibc/applications/fee/v1/tx.proto

package ibc.applications.fee.v1;

@kotlin.jvm.JvmSynthetic
public inline fun msgRegisterCounterpartyAddress(block: ibc.applications.fee.v1.MsgRegisterCounterpartyAddressKt.Dsl.() -> kotlin.Unit): ibc.applications.fee.v1.Tx.MsgRegisterCounterpartyAddress =
  ibc.applications.fee.v1.MsgRegisterCounterpartyAddressKt.Dsl._create(ibc.applications.fee.v1.Tx.MsgRegisterCounterpartyAddress.newBuilder()).apply { block() }._build()
public object MsgRegisterCounterpartyAddressKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ibc.applications.fee.v1.Tx.MsgRegisterCounterpartyAddress.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ibc.applications.fee.v1.Tx.MsgRegisterCounterpartyAddress.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ibc.applications.fee.v1.Tx.MsgRegisterCounterpartyAddress = _builder.build()

    /**
     * <pre>
     * the relayer address
     * </pre>
     *
     * <code>string address = 1;</code>
     */
    public var address: kotlin.String
      @JvmName("getAddress")
      get() = _builder.getAddress()
      @JvmName("setAddress")
      set(value) {
        _builder.setAddress(value)
      }
    /**
     * <pre>
     * the relayer address
     * </pre>
     *
     * <code>string address = 1;</code>
     */
    public fun clearAddress() {
      _builder.clearAddress()
    }

    /**
     * <pre>
     * the counterparty relayer address
     * </pre>
     *
     * <code>string counterparty_address = 2 [(.gogoproto.moretags) = "yaml:&#92;"counterparty_address&#92;""];</code>
     */
    public var counterpartyAddress: kotlin.String
      @JvmName("getCounterpartyAddress")
      get() = _builder.getCounterpartyAddress()
      @JvmName("setCounterpartyAddress")
      set(value) {
        _builder.setCounterpartyAddress(value)
      }
    /**
     * <pre>
     * the counterparty relayer address
     * </pre>
     *
     * <code>string counterparty_address = 2 [(.gogoproto.moretags) = "yaml:&#92;"counterparty_address&#92;""];</code>
     */
    public fun clearCounterpartyAddress() {
      _builder.clearCounterpartyAddress()
    }

    /**
     * <pre>
     * unique channel identifier
     * </pre>
     *
     * <code>string channel_id = 3 [(.gogoproto.moretags) = "yaml:&#92;"channel_id&#92;""];</code>
     */
    public var channelId: kotlin.String
      @JvmName("getChannelId")
      get() = _builder.getChannelId()
      @JvmName("setChannelId")
      set(value) {
        _builder.setChannelId(value)
      }
    /**
     * <pre>
     * unique channel identifier
     * </pre>
     *
     * <code>string channel_id = 3 [(.gogoproto.moretags) = "yaml:&#92;"channel_id&#92;""];</code>
     */
    public fun clearChannelId() {
      _builder.clearChannelId()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ibc.applications.fee.v1.Tx.MsgRegisterCounterpartyAddress.copy(block: ibc.applications.fee.v1.MsgRegisterCounterpartyAddressKt.Dsl.() -> kotlin.Unit): ibc.applications.fee.v1.Tx.MsgRegisterCounterpartyAddress =
  ibc.applications.fee.v1.MsgRegisterCounterpartyAddressKt.Dsl._create(this.toBuilder()).apply { block() }._build()
