//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmwasm/wasm/v1/genesis.proto

package cosmwasm.wasm.v1;

@kotlin.jvm.JvmSynthetic
public inline fun contract(block: cosmwasm.wasm.v1.ContractKt.Dsl.() -> kotlin.Unit): cosmwasm.wasm.v1.Genesis.Contract =
  cosmwasm.wasm.v1.ContractKt.Dsl._create(cosmwasm.wasm.v1.Genesis.Contract.newBuilder()).apply { block() }._build()
public object ContractKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmwasm.wasm.v1.Genesis.Contract.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmwasm.wasm.v1.Genesis.Contract.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmwasm.wasm.v1.Genesis.Contract = _builder.build()

    /**
     * <code>string contract_address = 1;</code>
     */
    public var contractAddress: kotlin.String
      @JvmName("getContractAddress")
      get() = _builder.getContractAddress()
      @JvmName("setContractAddress")
      set(value) {
        _builder.setContractAddress(value)
      }
    /**
     * <code>string contract_address = 1;</code>
     */
    public fun clearContractAddress() {
      _builder.clearContractAddress()
    }

    /**
     * <code>.cosmwasm.wasm.v1.ContractInfo contract_info = 2 [(.gogoproto.nullable) = false];</code>
     */
    public var contractInfo: cosmwasm.wasm.v1.Types.ContractInfo
      @JvmName("getContractInfo")
      get() = _builder.getContractInfo()
      @JvmName("setContractInfo")
      set(value) {
        _builder.setContractInfo(value)
      }
    /**
     * <code>.cosmwasm.wasm.v1.ContractInfo contract_info = 2 [(.gogoproto.nullable) = false];</code>
     */
    public fun clearContractInfo() {
      _builder.clearContractInfo()
    }
    /**
     * <code>.cosmwasm.wasm.v1.ContractInfo contract_info = 2 [(.gogoproto.nullable) = false];</code>
     * @return Whether the contractInfo field is set.
     */
    public fun hasContractInfo(): kotlin.Boolean {
      return _builder.hasContractInfo()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ContractStateProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .cosmwasm.wasm.v1.Model contract_state = 3 [(.gogoproto.nullable) = false];</code>
     */
     public val contractState: com.google.protobuf.kotlin.DslList<cosmwasm.wasm.v1.Types.Model, ContractStateProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getContractStateList()
      )
    /**
     * <code>repeated .cosmwasm.wasm.v1.Model contract_state = 3 [(.gogoproto.nullable) = false];</code>
     * @param value The contractState to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addContractState")
    public fun com.google.protobuf.kotlin.DslList<cosmwasm.wasm.v1.Types.Model, ContractStateProxy>.add(value: cosmwasm.wasm.v1.Types.Model) {
      _builder.addContractState(value)
    }/**
     * <code>repeated .cosmwasm.wasm.v1.Model contract_state = 3 [(.gogoproto.nullable) = false];</code>
     * @param value The contractState to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignContractState")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cosmwasm.wasm.v1.Types.Model, ContractStateProxy>.plusAssign(value: cosmwasm.wasm.v1.Types.Model) {
      add(value)
    }/**
     * <code>repeated .cosmwasm.wasm.v1.Model contract_state = 3 [(.gogoproto.nullable) = false];</code>
     * @param values The contractState to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllContractState")
    public fun com.google.protobuf.kotlin.DslList<cosmwasm.wasm.v1.Types.Model, ContractStateProxy>.addAll(values: kotlin.collections.Iterable<cosmwasm.wasm.v1.Types.Model>) {
      _builder.addAllContractState(values)
    }/**
     * <code>repeated .cosmwasm.wasm.v1.Model contract_state = 3 [(.gogoproto.nullable) = false];</code>
     * @param values The contractState to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllContractState")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cosmwasm.wasm.v1.Types.Model, ContractStateProxy>.plusAssign(values: kotlin.collections.Iterable<cosmwasm.wasm.v1.Types.Model>) {
      addAll(values)
    }/**
     * <code>repeated .cosmwasm.wasm.v1.Model contract_state = 3 [(.gogoproto.nullable) = false];</code>
     * @param index The index to set the value at.
     * @param value The contractState to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setContractState")
    public operator fun com.google.protobuf.kotlin.DslList<cosmwasm.wasm.v1.Types.Model, ContractStateProxy>.set(index: kotlin.Int, value: cosmwasm.wasm.v1.Types.Model) {
      _builder.setContractState(index, value)
    }/**
     * <code>repeated .cosmwasm.wasm.v1.Model contract_state = 3 [(.gogoproto.nullable) = false];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearContractState")
    public fun com.google.protobuf.kotlin.DslList<cosmwasm.wasm.v1.Types.Model, ContractStateProxy>.clear() {
      _builder.clearContractState()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmwasm.wasm.v1.Genesis.Contract.copy(block: cosmwasm.wasm.v1.ContractKt.Dsl.() -> kotlin.Unit): cosmwasm.wasm.v1.Genesis.Contract =
  cosmwasm.wasm.v1.ContractKt.Dsl._create(this.toBuilder()).apply { block() }._build()
