//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: confio/proofs.proto

package ics23;

@kotlin.jvm.JvmSynthetic
public inline fun compressedBatchProof(block: ics23.CompressedBatchProofKt.Dsl.() -> kotlin.Unit): ics23.Proofs.CompressedBatchProof =
  ics23.CompressedBatchProofKt.Dsl._create(ics23.Proofs.CompressedBatchProof.newBuilder()).apply { block() }._build()
public object CompressedBatchProofKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ics23.Proofs.CompressedBatchProof.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ics23.Proofs.CompressedBatchProof.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ics23.Proofs.CompressedBatchProof = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class EntriesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .ics23.CompressedBatchEntry entries = 1;</code>
     */
     public val entries: com.google.protobuf.kotlin.DslList<ics23.Proofs.CompressedBatchEntry, EntriesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getEntriesList()
      )
    /**
     * <code>repeated .ics23.CompressedBatchEntry entries = 1;</code>
     * @param value The entries to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addEntries")
    public fun com.google.protobuf.kotlin.DslList<ics23.Proofs.CompressedBatchEntry, EntriesProxy>.add(value: ics23.Proofs.CompressedBatchEntry) {
      _builder.addEntries(value)
    }/**
     * <code>repeated .ics23.CompressedBatchEntry entries = 1;</code>
     * @param value The entries to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignEntries")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ics23.Proofs.CompressedBatchEntry, EntriesProxy>.plusAssign(value: ics23.Proofs.CompressedBatchEntry) {
      add(value)
    }/**
     * <code>repeated .ics23.CompressedBatchEntry entries = 1;</code>
     * @param values The entries to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllEntries")
    public fun com.google.protobuf.kotlin.DslList<ics23.Proofs.CompressedBatchEntry, EntriesProxy>.addAll(values: kotlin.collections.Iterable<ics23.Proofs.CompressedBatchEntry>) {
      _builder.addAllEntries(values)
    }/**
     * <code>repeated .ics23.CompressedBatchEntry entries = 1;</code>
     * @param values The entries to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllEntries")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ics23.Proofs.CompressedBatchEntry, EntriesProxy>.plusAssign(values: kotlin.collections.Iterable<ics23.Proofs.CompressedBatchEntry>) {
      addAll(values)
    }/**
     * <code>repeated .ics23.CompressedBatchEntry entries = 1;</code>
     * @param index The index to set the value at.
     * @param value The entries to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setEntries")
    public operator fun com.google.protobuf.kotlin.DslList<ics23.Proofs.CompressedBatchEntry, EntriesProxy>.set(index: kotlin.Int, value: ics23.Proofs.CompressedBatchEntry) {
      _builder.setEntries(index, value)
    }/**
     * <code>repeated .ics23.CompressedBatchEntry entries = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearEntries")
    public fun com.google.protobuf.kotlin.DslList<ics23.Proofs.CompressedBatchEntry, EntriesProxy>.clear() {
      _builder.clearEntries()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class LookupInnersProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .ics23.InnerOp lookup_inners = 2;</code>
     */
     public val lookupInners: com.google.protobuf.kotlin.DslList<ics23.Proofs.InnerOp, LookupInnersProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getLookupInnersList()
      )
    /**
     * <code>repeated .ics23.InnerOp lookup_inners = 2;</code>
     * @param value The lookupInners to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addLookupInners")
    public fun com.google.protobuf.kotlin.DslList<ics23.Proofs.InnerOp, LookupInnersProxy>.add(value: ics23.Proofs.InnerOp) {
      _builder.addLookupInners(value)
    }/**
     * <code>repeated .ics23.InnerOp lookup_inners = 2;</code>
     * @param value The lookupInners to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignLookupInners")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ics23.Proofs.InnerOp, LookupInnersProxy>.plusAssign(value: ics23.Proofs.InnerOp) {
      add(value)
    }/**
     * <code>repeated .ics23.InnerOp lookup_inners = 2;</code>
     * @param values The lookupInners to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllLookupInners")
    public fun com.google.protobuf.kotlin.DslList<ics23.Proofs.InnerOp, LookupInnersProxy>.addAll(values: kotlin.collections.Iterable<ics23.Proofs.InnerOp>) {
      _builder.addAllLookupInners(values)
    }/**
     * <code>repeated .ics23.InnerOp lookup_inners = 2;</code>
     * @param values The lookupInners to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllLookupInners")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ics23.Proofs.InnerOp, LookupInnersProxy>.plusAssign(values: kotlin.collections.Iterable<ics23.Proofs.InnerOp>) {
      addAll(values)
    }/**
     * <code>repeated .ics23.InnerOp lookup_inners = 2;</code>
     * @param index The index to set the value at.
     * @param value The lookupInners to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setLookupInners")
    public operator fun com.google.protobuf.kotlin.DslList<ics23.Proofs.InnerOp, LookupInnersProxy>.set(index: kotlin.Int, value: ics23.Proofs.InnerOp) {
      _builder.setLookupInners(index, value)
    }/**
     * <code>repeated .ics23.InnerOp lookup_inners = 2;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearLookupInners")
    public fun com.google.protobuf.kotlin.DslList<ics23.Proofs.InnerOp, LookupInnersProxy>.clear() {
      _builder.clearLookupInners()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun ics23.Proofs.CompressedBatchProof.copy(block: ics23.CompressedBatchProofKt.Dsl.() -> kotlin.Unit): ics23.Proofs.CompressedBatchProof =
  ics23.CompressedBatchProofKt.Dsl._create(this.toBuilder()).apply { block() }._build()
