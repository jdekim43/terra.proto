//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmos/gov/v1beta1/gov.proto

package cosmos.gov.v1beta1;

@kotlin.jvm.JvmSynthetic
public inline fun textProposal(block: cosmos.gov.v1beta1.TextProposalKt.Dsl.() -> kotlin.Unit): cosmos.gov.v1beta1.Gov.TextProposal =
  cosmos.gov.v1beta1.TextProposalKt.Dsl._create(cosmos.gov.v1beta1.Gov.TextProposal.newBuilder()).apply { block() }._build()
public object TextProposalKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.gov.v1beta1.Gov.TextProposal.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmos.gov.v1beta1.Gov.TextProposal.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmos.gov.v1beta1.Gov.TextProposal = _builder.build()

    /**
     * <code>string title = 1;</code>
     */
    public var title: kotlin.String
      @JvmName("getTitle")
      get() = _builder.getTitle()
      @JvmName("setTitle")
      set(value) {
        _builder.setTitle(value)
      }
    /**
     * <code>string title = 1;</code>
     */
    public fun clearTitle() {
      _builder.clearTitle()
    }

    /**
     * <code>string description = 2;</code>
     */
    public var description: kotlin.String
      @JvmName("getDescription")
      get() = _builder.getDescription()
      @JvmName("setDescription")
      set(value) {
        _builder.setDescription(value)
      }
    /**
     * <code>string description = 2;</code>
     */
    public fun clearDescription() {
      _builder.clearDescription()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.gov.v1beta1.Gov.TextProposal.copy(block: cosmos.gov.v1beta1.TextProposalKt.Dsl.() -> kotlin.Unit): cosmos.gov.v1beta1.Gov.TextProposal =
  cosmos.gov.v1beta1.TextProposalKt.Dsl._create(this.toBuilder()).apply { block() }._build()
