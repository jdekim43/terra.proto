//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmos/base/snapshots/v1beta1/snapshot.proto

package cosmos.base.snapshots.v1beta1;

@kotlin.jvm.JvmSynthetic
public inline fun snapshotItem(block: cosmos.base.snapshots.v1beta1.SnapshotItemKt.Dsl.() -> kotlin.Unit): cosmos.base.snapshots.v1beta1.SnapshotOuterClass.SnapshotItem =
  cosmos.base.snapshots.v1beta1.SnapshotItemKt.Dsl._create(cosmos.base.snapshots.v1beta1.SnapshotOuterClass.SnapshotItem.newBuilder()).apply { block() }._build()
public object SnapshotItemKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.base.snapshots.v1beta1.SnapshotOuterClass.SnapshotItem.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmos.base.snapshots.v1beta1.SnapshotOuterClass.SnapshotItem.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmos.base.snapshots.v1beta1.SnapshotOuterClass.SnapshotItem = _builder.build()

    /**
     * <code>.cosmos.base.snapshots.v1beta1.SnapshotStoreItem store = 1;</code>
     */
    public var store: cosmos.base.snapshots.v1beta1.SnapshotOuterClass.SnapshotStoreItem
      @JvmName("getStore")
      get() = _builder.getStore()
      @JvmName("setStore")
      set(value) {
        _builder.setStore(value)
      }
    /**
     * <code>.cosmos.base.snapshots.v1beta1.SnapshotStoreItem store = 1;</code>
     */
    public fun clearStore() {
      _builder.clearStore()
    }
    /**
     * <code>.cosmos.base.snapshots.v1beta1.SnapshotStoreItem store = 1;</code>
     * @return Whether the store field is set.
     */
    public fun hasStore(): kotlin.Boolean {
      return _builder.hasStore()
    }

    /**
     * <code>.cosmos.base.snapshots.v1beta1.SnapshotIAVLItem iavl = 2 [(.gogoproto.customname) = "IAVL"];</code>
     */
    public var iavl: cosmos.base.snapshots.v1beta1.SnapshotOuterClass.SnapshotIAVLItem
      @JvmName("getIavl")
      get() = _builder.getIavl()
      @JvmName("setIavl")
      set(value) {
        _builder.setIavl(value)
      }
    /**
     * <code>.cosmos.base.snapshots.v1beta1.SnapshotIAVLItem iavl = 2 [(.gogoproto.customname) = "IAVL"];</code>
     */
    public fun clearIavl() {
      _builder.clearIavl()
    }
    /**
     * <code>.cosmos.base.snapshots.v1beta1.SnapshotIAVLItem iavl = 2 [(.gogoproto.customname) = "IAVL"];</code>
     * @return Whether the iavl field is set.
     */
    public fun hasIavl(): kotlin.Boolean {
      return _builder.hasIavl()
    }

    /**
     * <code>.cosmos.base.snapshots.v1beta1.SnapshotExtensionMeta extension = 3;</code>
     */
    public var extension: cosmos.base.snapshots.v1beta1.SnapshotOuterClass.SnapshotExtensionMeta
      @JvmName("getExtension")
      get() = _builder.getExtension()
      @JvmName("setExtension")
      set(value) {
        _builder.setExtension(value)
      }
    /**
     * <code>.cosmos.base.snapshots.v1beta1.SnapshotExtensionMeta extension = 3;</code>
     */
    public fun clearExtension() {
      _builder.clearExtension()
    }
    /**
     * <code>.cosmos.base.snapshots.v1beta1.SnapshotExtensionMeta extension = 3;</code>
     * @return Whether the extension field is set.
     */
    public fun hasExtension(): kotlin.Boolean {
      return _builder.hasExtension()
    }

    /**
     * <code>.cosmos.base.snapshots.v1beta1.SnapshotExtensionPayload extension_payload = 4;</code>
     */
    public var extensionPayload: cosmos.base.snapshots.v1beta1.SnapshotOuterClass.SnapshotExtensionPayload
      @JvmName("getExtensionPayload")
      get() = _builder.getExtensionPayload()
      @JvmName("setExtensionPayload")
      set(value) {
        _builder.setExtensionPayload(value)
      }
    /**
     * <code>.cosmos.base.snapshots.v1beta1.SnapshotExtensionPayload extension_payload = 4;</code>
     */
    public fun clearExtensionPayload() {
      _builder.clearExtensionPayload()
    }
    /**
     * <code>.cosmos.base.snapshots.v1beta1.SnapshotExtensionPayload extension_payload = 4;</code>
     * @return Whether the extensionPayload field is set.
     */
    public fun hasExtensionPayload(): kotlin.Boolean {
      return _builder.hasExtensionPayload()
    }
    public val itemCase: cosmos.base.snapshots.v1beta1.SnapshotOuterClass.SnapshotItem.ItemCase
      @JvmName("getItemCase")
      get() = _builder.getItemCase()

    public fun clearItem() {
      _builder.clearItem()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.base.snapshots.v1beta1.SnapshotOuterClass.SnapshotItem.copy(block: cosmos.base.snapshots.v1beta1.SnapshotItemKt.Dsl.() -> kotlin.Unit): cosmos.base.snapshots.v1beta1.SnapshotOuterClass.SnapshotItem =
  cosmos.base.snapshots.v1beta1.SnapshotItemKt.Dsl._create(this.toBuilder()).apply { block() }._build()
