//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmos/vesting/v1beta1/vesting.proto

package cosmos.vesting.v1beta1;

@kotlin.jvm.JvmSynthetic
public inline fun continuousVestingAccount(block: cosmos.vesting.v1beta1.ContinuousVestingAccountKt.Dsl.() -> kotlin.Unit): cosmos.vesting.v1beta1.Vesting.ContinuousVestingAccount =
  cosmos.vesting.v1beta1.ContinuousVestingAccountKt.Dsl._create(cosmos.vesting.v1beta1.Vesting.ContinuousVestingAccount.newBuilder()).apply { block() }._build()
public object ContinuousVestingAccountKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.vesting.v1beta1.Vesting.ContinuousVestingAccount.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmos.vesting.v1beta1.Vesting.ContinuousVestingAccount.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmos.vesting.v1beta1.Vesting.ContinuousVestingAccount = _builder.build()

    /**
     * <code>.cosmos.vesting.v1beta1.BaseVestingAccount base_vesting_account = 1 [(.gogoproto.embed) = true];</code>
     */
    public var baseVestingAccount: cosmos.vesting.v1beta1.Vesting.BaseVestingAccount
      @JvmName("getBaseVestingAccount")
      get() = _builder.getBaseVestingAccount()
      @JvmName("setBaseVestingAccount")
      set(value) {
        _builder.setBaseVestingAccount(value)
      }
    /**
     * <code>.cosmos.vesting.v1beta1.BaseVestingAccount base_vesting_account = 1 [(.gogoproto.embed) = true];</code>
     */
    public fun clearBaseVestingAccount() {
      _builder.clearBaseVestingAccount()
    }
    /**
     * <code>.cosmos.vesting.v1beta1.BaseVestingAccount base_vesting_account = 1 [(.gogoproto.embed) = true];</code>
     * @return Whether the baseVestingAccount field is set.
     */
    public fun hasBaseVestingAccount(): kotlin.Boolean {
      return _builder.hasBaseVestingAccount()
    }

    /**
     * <code>int64 start_time = 2 [(.gogoproto.moretags) = "yaml:&#92;"start_time&#92;""];</code>
     */
    public var startTime: kotlin.Long
      @JvmName("getStartTime")
      get() = _builder.getStartTime()
      @JvmName("setStartTime")
      set(value) {
        _builder.setStartTime(value)
      }
    /**
     * <code>int64 start_time = 2 [(.gogoproto.moretags) = "yaml:&#92;"start_time&#92;""];</code>
     */
    public fun clearStartTime() {
      _builder.clearStartTime()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.vesting.v1beta1.Vesting.ContinuousVestingAccount.copy(block: cosmos.vesting.v1beta1.ContinuousVestingAccountKt.Dsl.() -> kotlin.Unit): cosmos.vesting.v1beta1.Vesting.ContinuousVestingAccount =
  cosmos.vesting.v1beta1.ContinuousVestingAccountKt.Dsl._create(this.toBuilder()).apply { block() }._build()
